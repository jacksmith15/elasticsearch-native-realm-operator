# to run define K3S_TOKEN, K3S_VERSION is optional, eg:
#   K3S_TOKEN=${RANDOM}${RANDOM}${RANDOM} docker-compose up

version: '3'
services:

  server:
    image: "rancher/k3s:v1.21.5-k3s1"
    command: server --https-listen-port 16443
    tmpfs:
    - /run
    - /var/run
    ulimits:
      nproc: 65535
      nofile:
        soft: 65535
        hard: 65535
    privileged: true
    restart: always
    environment:
    - K3S_TOKEN=${K3S_TOKEN:?err}
    - K3S_KUBECONFIG_OUTPUT=/output/kubeconfig.yaml
    - K3S_KUBECONFIG_MODE=666
    volumes:
    - k3s-server:/var/lib/rancher/k3s
    # This is just so that we get the kubeconfig file out
    - .:/output
    # - ./manifests:/var/lib/rancher/k3s/server/manifests
    - ./images:/var/lib/rancher/k3s/agent/images
    ports:
    - 16443:16443  # Kubernetes API Server
    # - 80:80      # Ingress controller port 80
    # - 443:443    # Ingress controller port 443

  agent:
    image: "rancher/k3s:${K3S_VERSION:-latest}"
    tmpfs:
    - /run
    - /var/run
    ulimits:
      nproc: 65535
      nofile:
        soft: 65535
        hard: 65535
    privileged: true
    restart: always
    environment:
    - K3S_URL=https://server:16443
    - K3S_TOKEN=${K3S_TOKEN:?err}
    volumes:
    - ./images:/var/lib/rancher/k3s/agent/images

  elasticsearch:
    image: elasticsearch:7.14.1
    environment:
    - node.name=elasticsearch
    - bootstrap.memory_lock=true
    # - cluster.initial_master_nodes=elasticsearch
    - cluster.name=elasticsearch
    - discovery.type=single-node
    - ES_JAVA_OPTS=-Xms1g -Xmx1g
    - xpack.security.enabled=true
    - ELASTIC_PASSWORD=changeme
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    ports:
    - "29200:9200"

volumes:
  k3s-server: {}
