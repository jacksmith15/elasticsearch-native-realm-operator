apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: elasticsearchnativerealmusers.elasticsearchnativerealm.ckpd.co
spec:
  scope: Namespaced
  group: elasticsearchnativerealm.ckpd.co
  names:
    kind: ElasticsearchNativeRealmUser
    plural: elasticsearchnativerealmusers
    singular: elasticsearchnativerealmuser
  versions:
  - name: v1
    served: true
    storage: true
    schema:
      openAPIV3Schema:
        description: ElasticsearchNativeRealmUser defines a user in Elasticsearch's native auth realm.
        type: object
        # This is necessary to allow operator to keep state:
        x-kubernetes-preserve-unknown-fields: true
        properties:
          apiVersion:
            type: string
            description: |-
              APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
          kind:
            type: string
            description: |-
              Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
          metadata:
            type: object
          spec:
            type: object
            description: Specification of the desired user.
            required:
            - username
            - roles
            properties:
              username:
                type: string
                description: An identifier for the user.
                minLength: 1
                maxLength: 1024
              roles:
                type: array
                description: |-
                  A set of roles the user has. The roles determine the userâ€™s access permissions.
                  To create a user without any roles, specify an empty list: `[]`.
                items:
                  type: string
              # TODO: hashed_password (to allow generation independently of operator)
              metadata:
                type: object
                description: |-
                  Arbitrary metadata that you want to associate with the user.  Note that metadata
                  will be used to track management of the user via the operator.
              enabled:
                type: boolean
                description: Specifies whether the user is enabled. The default value is `true`.
                default: true
              email:
                type: string
                description: The email of the user (optional).
              full_name:
                type: string
                description: The full name of the user (optional).
