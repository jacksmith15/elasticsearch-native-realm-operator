from jsonpointer import JsonPointer


_sentinel = object()


def resolve_refs(schema: dict, part=_sentinel):
    """Resolve references in schema generated by pydantic.

    Does not support remote or cyclical references.
    """
    if part is _sentinel:
        part = schema
    if not isinstance(part, (dict, list)):
        return part
    if isinstance(part, list):
        return [resolve_refs(schema, item) for item in part]
    if "$ref" in part:
        return resolve_refs(schema, JsonPointer(part["$ref"].lstrip("#")).resolve(schema))
    return {key: resolve_refs(schema, value) for key, value in part.items() if key != "definitions"}
